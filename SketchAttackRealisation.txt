instruction_following (float): Склонность сотрудника следовать инструкциям и правилам.
Здесь есть нюанс. Если инструкции безопасные, то склонность к их выполнению снижает вероятность успеха атаки. Если же злоумышленник обманом заставляет сотрудника следовать вредоносным инструкциям, то склонность к их выполнению повышает вероятность успеха атаки. В текущей формуле подразумевается, что в основном инструкции полезные и следование им снижает вероятность успеха атак.
Знак в формуле: "-" - пояснить в дипломе.

authority_respect (float): Уважение сотрудника к авторитетам (склонность подчиняться указаниям, - чем выше, тем хуже с точки зрения социальной инженерии).
Высокое уважение к авторитетам делает сотрудника более уязвимым к атакам социальной инженерии, когда злоумышленник выдает себя за авторитетное лицо.
Знак в формуле: + b5 * employee.authority_respect.

Анализ параметров:

attentiveness (float): Внимательность сотрудника (вероятность заметить опасность).

Внимательный сотрудник должен быть менее подвержен атакам.
Знак в формуле: - b1 * employee.attentiveness (корректно, высокая внимательность уменьшает z и, следовательно, вероятность успеха атаки).
technical_literacy (float): Техническая грамотность сотрудника (понимание основ ИБ).

Технически грамотный сотрудник должен быть менее подвержен атакам.
Знак в формуле: - b2 * employee.technical_literacy (корректно, высокая тех. грамотность уменьшает z и вероятность успеха атаки).
stress_resistance (float): Стрессоустойчивость сотрудника (способность сохранять спокойствие в стрессовых ситуациях).

Стрессоустойчивый сотрудник должен быть менее подвержен ошибкам и, следовательно, атакам.
Знак в формуле: - b7 * employee.stress_resistance (корректно, высокая стрессоустойчивость уменьшает z и вероятность успеха атаки).
instruction_following (float): Склонность сотрудника следовать инструкциям и правилам.

Здесь есть нюанс. Если инструкции безопасные, то склонность к их выполнению снижает вероятность успеха атаки. Если же злоумышленник обманом заставляет сотрудника следовать вредоносным инструкциям, то склонность к их выполнению повышает вероятность успеха атаки. В текущей формуле подразумевается, что в основном инструкции полезные и следование им снижает вероятность успеха атак.
Знак в формуле: - b8 * employee.instruction_following (в целом корректно, но требует пояснения в дипломной работе об этом нюансе).
learnability (float): Обучаемость сотрудника (скорость обучения новым навыкам).

Обучаемый сотрудник быстрее усваивает информацию о безопасности и становится менее уязвимым.
Знак в формуле: - b9 * (1 - employee.learnability) (корректно, высокая обучаемость уменьшает z и вероятность успеха атаки, т.к. (1 - employee.learnability) уменьшается).
social_engineering_awareness (float): Осведомленность сотрудника о методах социальной инженерии.

Осведомленный сотрудник должен быть менее подвержен атакам социальной инженерии.
Знак в формуле: - b4 * employee.social_engineering_awareness (корректно, высокая осведомленность уменьшает z и вероятность успеха атаки).
reporting_culture (float): Готовность сотрудника сообщать об инцидентах безопасности.

Сотрудник, готовый сообщать об инцидентах, помогает выявлять и предотвращать атаки.
Знак в формуле: + b10 * (1 - employee.reporting_culture) (корректно, высокая готовность сообщать об инцидентах уменьшает z и вероятность успеха атаки, т.к. (1 - employee.reporting_culture) уменьшается).
authority_respect (float): Уважение сотрудника к авторитетам (склонность подчиняться указаниям, - чем выше, тем хуже с точки зрения социальной инженерии).

Высокое уважение к авторитетам делает сотрудника более уязвимым к атакам социальной инженерии, когда злоумышленник выдает себя за авторитетное лицо.
Знак в формуле: + b5 * employee.authority_respect (корректно, высокое уважение к авторитетам увеличивает z и вероятность успеха атаки).
workload (float): Рабочая нагрузка сотрудника (уровень загруженности работой).

Высокая рабочая нагрузка может приводить к снижению внимательности и увеличению вероятности ошибок.
Знак в формуле: + b6 * employee.workload (корректно, высокая рабочая нагрузка увеличивает z и вероятность успеха атаки).
risk_aversion (float): Склонность сотрудника к риску (чем выше, тем больше склонен к рискованному поведению).


Цель: Отразить, что высокая обучаемость делает сотрудника более защищенным:

Мы хотим, чтобы высокая обучаемость (большое значение employee.learnability) снижала значение z (и, следовательно, снижала вероятность успеха атаки). То есть, чем выше employee.learnability, тем меньше должно быть слагаемое в формуле для z.

Как это работает с (1 - employee.learnability):

Если employee.learnability = 1.0 (очень высокая обучаемость):

(1 - employee.learnability) = (1 - 1.0) = 0.0
b9 * (1 - employee.learnability) = b9 * 0.0 = 0.0
Вклад этого слагаемого в z становится минимальным (или нулевым, если мы учтем, что b9 - это небольшой коэффициент).
Если employee.learnability = 0.0 (очень низкая обучаемость):

(1 - employee.learnability) = (1 - 0.0) = 1.0
b9 * (1 - employee.learnability) = b9 * 1.0 = b9
Вклад этого слагаемого в z будет максимальным (равным b9).
Логика:

Чем выше employee.learnability, тем меньше вклад этого фактора в z.
Чем ниже employee.learnability, тем больше вклад этого фактора в z.
Именно этого мы и хотим добиться. Если сотрудник хорошо обучается, то фактор, связанный с обучаемостью, вносит меньший вклад в увеличение z (и, следовательно, в вероятность успеха атаки).

Альтернативный вариант (и почему он хуже):

Можно было бы попробовать использовать просто - b9 * employee.learnability. Но это не будет работать так, как нам нужно:

Если employee.learnability = 1.0: - b9 * 1.0 = -b9. Это будет уменьшать z, что хорошо.
Если employee.learnability = 0.0: - b9 * 0.0 = 0. Это не повлияет на z.
Но проблема в том, что отрицательное значение - b9 * employee.learnability делает только сотрудника, у которого большая обучаемость более защищенным. Сотрудник с маленькой обучаемостью не станет более уязвимым, т.к. вклад в формулу нулевой. А мы хотим, чтобы низкая обучаемость, наоборот, делала сотрудника более уязвимым.

Итог:

Использование b9 * (1 - employee.learnability) позволяет нам корректно отразить влияние обучаемости на вероятность успеха атаки:

Высокая обучаемость -> меньший вклад в z -> меньшая вероятность успеха атаки.
Низкая обучаемость -> больший вклад в z -> большая вероятность успеха атаки.

